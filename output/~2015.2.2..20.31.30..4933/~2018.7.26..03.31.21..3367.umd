:-  :~
  [%owner '~fitlys-dopmep-sopleg-widnyr--fasmud-lignux-binwyd-dopzod']
  [%comments '.y']
  [%type 'fora']
  [%last-modified '~2018.7.26..03.31.21..3367']
  [%date-created '~2018.7.26..03.31.21..3367']
  [%name 'Dry/Wet gate difference on a simple example']
    ==
;>

I was trying to get a better grasp on true difference 
between wet/dry gates on the following example:
```
++  turn-wet  
|*  [s=(list) a=$-(* *)]
?~  s  ~
    [i=(a i.s) t=$(s t.l)]
```
So this this a wet gate, and I can freely apply it on any list and a gate 
that will transform each element. Now suppose I change it to:
```
++  turn-dry
|=  [s=(list) a=$-(* *)]
?~  s  ~
    [i=(a i.s) t=$(s t.l)]
```

This will no longer work, the gate is now dry and the sample is 'burnt' (what does this mean exactly. For a dry gate, does the model for s become the mold of whatever it was first invoked with?) upon 
first application. Once you recurse, the types will mismatch. 
However, if the above is correct, I would expect the following:

```
(turn-dry ~ |=(a=@ a))
```
to work on an empty list. Or does the type checker for turn-dry always 
recurse into the case s != ~, which then fails.

~ponmep-litsem

