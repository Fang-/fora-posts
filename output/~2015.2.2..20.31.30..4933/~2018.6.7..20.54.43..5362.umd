:-  :~
  [%owner '~listud-satpur-moslec-ligsyr--bicdex-nisdeg-binwyd-dopzod']
  [%comments '.y']
  [%type 'fora']
  [%last-modified '~2018.6.7..20.54.43..5362']
  [%date-created '~2018.6.7..20.54.43..5362']
  [%name 'Hoon Exercises for Beginners #3']
    ==
;>

- Return the number of 'leaves' of an input noun.

Nouns can be understood as binary trees, with each atom in it as a leaf of the tree.  Write a gate that takes a noun and returns the number of 'leaves' as an atom.

- Converts a noun to a list of its leaves.

Write a gate that takes a noun and returns a (list @) of the 'leaves' of that noun.

- Samefringe

`~tonlur` sent me this problem about a year ago:

"The samefringe problem compares two nouns (either an atom or a cell, an ordered pair of nouns) and checks if their respective lists of leaves in order are equal. For example, [[4 2] 42] has the same fringe as [4 2 42], even though they're different nouns because their leaves appear in the same order. The "dumb" way to do this is to first calculate the fringes of both, then compare. The "real" way to do this is to compare both fringes as you go and halt the computation once the two fringes differ."

Solve this problem the "real" way.  Write a gate that takes two nouns and returns either yes or no, accordingly.

- Insertion sort

`~tonlur` also sent me this problem around the same time:

"With insertion sort, you start with the full unsorted list (the gate's sample, say a (list @)) and a second sorted list (that starts with just the empty list, ~), and you incrementally place each element of the unsorted list into sorted position in the second list, until the first list is empty and the second list is the sorted final list."

Write a gate that does insertion sort.

